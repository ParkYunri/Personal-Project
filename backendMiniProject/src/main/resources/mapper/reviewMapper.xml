<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.campus.myapp.dao.ReviewDAO">
	<insert id="reviewInsert">
		insert into review(subject, content, userid, filename1, filename2, ip)
		values(#{subject}, #{content}, #{userid}, #{filename1}, #{filename2}, #{ip} )
	</insert>
	<select id="reviewList" resultType="com.campus.myapp.vo.ReviewVO">
		select no, userid, subject, hit, filename1, filename2, date_format(writedate,'%m/%d') writedate
		from review
		<if test='searchWord != null'>
			where ${searchKey} like '%${searchWord}%'
		</if>
		order by no desc limit #{onePageRecord} offset ${offsetIndex}
	</select>
	<select id="reviewView" resultType="com.campus.myapp.vo.ReviewVO">
		select no, subject, userid, content, writedate, filename1, filename2
		from review where no=${param1}
	</select>
	<update id="hitCount">
		update review set hit=hit+1 where no=${param1}
	</update>
	<select id="fileSelect" resultType="com.campus.myapp.vo.ReviewVO">
		select filename1, filename2 from review where no=${param1}
	</select>
	<update id="reviewUpdate">
		update review set subject=#{subject}, content=#{content}, filename1=#{filename1}, filename2=#{filename2}
		where no=${no} and userid=#{userid}
	</update>
	<delete id="reviewDelete">
		delete from review where no=#{param1} and userid=#{param2}
	</delete>
	<select id="totalRecord" resultType="int">
		select count(no) cnt from review
		<if test='searchWord!=null'>
			where ${searchKey} like '%${searchWord}'
		</if>
	</select>
	<delete id="reviewMultiDelete">
		delete from review 
		<where>
			<foreach item="item" collection="noList" open="no in (" separator="," close=")">
				#{item}		
			</foreach>
			and userid=#{userid}
		</where>
	</delete>
</mapper>